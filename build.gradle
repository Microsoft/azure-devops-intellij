/**
 * This is the main gradle build file for the VSO IntelliJ Plugin.
 */

plugins {
    id 'org.jetbrains.intellij' version '0.3.4' apply false
}

/**
 *This is task for update Gradle wrapper version.
 */
task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

/**
 * settings common to ALL projects (even the root level project)
 */
allprojects {
    configurations {
        codeAnalysisLibs
    }

    repositories {
        mavenCentral()
        maven {
            url "http://artifacts.eastus.cloudapp.azure.com:8081/nexus/content/repositories/snapshots"
        }
        maven {
            url "http://artifacts.eastus.cloudapp.azure.com:8081/nexus/content/repositories/releases"
        }
    }
}

/**
 * settings shared by each subproject (part 1)
 */
subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'


    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    task unitTest(type: Test) {
        exclude '**/L2/**'
    }
    
    sourceSets {
        main {
            compileClasspath += configurations.codeAnalysisLibs

            java {
                srcDir 'src'
            }

            resources {
                srcDir 'resources'
            }
        }

        test {
            compileClasspath += configurations.codeAnalysisLibs
            runtimeClasspath += configurations.codeAnalysisLibs

            java {
                srcDir 'test'
            }
        }
    }    
}

/**
 * specific settings for each project
 */
project(":common") {
    jar {
        baseName 'com.microsoft.alm.common'
    }
}

project(":plugin") {
    apply plugin: 'org.jetbrains.intellij'

    intellij {
        version = idea_version
    }

    dependencies {
        compile project(':common')
    }

    jar {
        baseName 'com.microsoft.alm.plugin'
    }
}

project(":plugin.idea") {
    apply plugin: 'org.jetbrains.intellij'

    version buildNumber

    intellij {
        version = idea_version
        plugins = ['git4idea']
        pluginName = 'com.microsoft.vso.idea'
    }

    dependencies {
        compile project(':plugin')
        testCompile project(':plugin').sourceSets.test.output
    }

    jar {
        baseName 'com.microsoft.alm.plugin.idea'
        // For build plugin without developer telemetry -Dorg.gradle.project.developer_telemetry=false
        if (developer_telemetry != "true") {
            exclude 'telemetry/'
        }
        from('.') {
            include 'META-INF/plugin.xml'
        }
    }

    task showVersion() {
        println("version = " + buildNumber)
    }    
}

project(":L2Tests") {
    apply plugin: 'org.jetbrains.intellij'

    intellij {
        version = idea_version
        plugins = ['git4idea']
    }

    dependencies {
        compile project(':plugin.idea')
        testCompile project(':plugin').sourceSets.test.output
        testCompile project(':plugin.idea').sourceSets.test.output        
    }

    jar {
        baseName 'com.microsoft.alm.L2'
    }
}


/**
 * settings shared by each subproject (part 2)
 */
subprojects {
    dependencies {
        codeAnalysisLibs 'com.google.code.findbugs:annotations:3.0.0'
        compile group: 'com.microsoft.alm', name: 'alm-http-client-dep', version: '0.4.3-SNAPSHOT'
        compile group: 'commons-io', name: 'commons-io', version: '2.4'
        compile group: 'com.microsoft.azure', name: 'applicationinsights-web', version: '1.0.10'
        compile group: 'com.google.guava', name: 'guava', version: '19.0'
        compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.6'
        compile group: 'org.glassfish.jersey.connectors', name: 'jersey-apache-connector', version: '2.6'
        compile (group: 'org.apache.httpcomponents', name: 'httpclient-win', version: '4.4.1') {
            /* Task 454223: exclude default JNA dependency (would be version 4.1.0 as of this writing) */
            exclude group: 'net.java.dev.jna', module: 'jna'
            exclude group: 'net.java.dev.jna', module: 'jna-platform'
        }
        /* Task 454223: anchor JNA dependency to version 3.4.0 to match Android Studio 1.4 and IntelliJ IDEA 14 */
        compile group: 'net.java.dev.jna', name: 'jna', version: '3.4.0'

        compile (group: 'com.microsoft.alm', name: 'auth-core', version: '0.6.3') {
            /* Exclude default JNA dependency (would be version 4.2.1 as of this writing) */
            exclude group: 'net.java.dev.jna', module: 'jna'
            exclude group: 'net.java.dev.jna', module: 'jna-platform'

            /* Exclude default SLF4J dependency (would be version 1.7.19 as of this writing) */
            exclude group: 'org.slf4j', module: 'slf4j-api'
        }
        compileOnly group: 'commons-lang', name: 'commons-lang', version: '2.4'
        compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.3'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.3'
        testCompile group: 'org.powermock', name: 'powermock-classloading-xstream', version: '1.6.3'
        testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        testCompile group: 'commons-lang', name: 'commons-lang', version: '2.4'
    }   

    test {
        forkEvery = 10     
    }
    
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    tasks.withType(FindBugs) {
        ignoreFailures = true
        reports {
            html { enabled = true }
            xml.enabled = !html.enabled
        }
    }

    /**
     * Preparing for release build
     */
    task prepRelease(dependsOn: [':plugin.idea:delTestTelemetryPropFile']) {
    }

    /**
     * Open source prep
     */
    checkstyle {
        toolVersion = "6.1"
        ignoreFailures = false
        configFile = file "${rootDir}/config/checkstyle/custom-rules.xml"
        configProperties = [
            'checkstyle.java.header': "${rootDir}/config/checkstyle/java.header"
        ]
    }

    pmd {
        toolVersion = "5.0.3"
        ignoreFailures = true
        ruleSetFiles = files "${rootDir}/config/pmd/custom-pmd-rules.xml"
    }

    /**
     * Static code analysis tools
     */
    findbugs {
      toolVersion = "3.0.0"
    }
}
