jobs:
  - job: production_build
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-18.04'
        macOS:
          imageName: 'macOS-10.15'
        windows:
          imageName: 'windows-2019'
    pool:
      vmImage: $(imageName)
    variables:
      GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
    steps:
      - task: CmdLine@1
        displayName: Run printenv
        inputs:
          filename: printenv

      - task: Cache@2
        inputs:
          key: '"$(Agent.OS)" | "2018.2" | production_build | **/*.gradle | gradle.properties'
          restoreKeys: |
            "$(Agent.OS)" | "2018.2" | production_build | **/*.gradle
            "$(Agent.OS)" | "2018.2" | production_build
          path: $(GRADLE_USER_HOME)/caches/modules-2
        displayName: Gradle build cache

      - task: Gradle@2
        displayName: Gradle build (zip)
        inputs:
          jdkVersionOption: 1.8
          options: '--info'
          tasks: clean build zip
          testResultsFiles: '**/TEST-*.xml'

      - task: PublishPipelineArtifact@1
        displayName: "Publish Artifact: $(build.buildNumber)"
        condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), eq(variables['Agent.OS'], 'Linux'))
        inputs:
          path: 'plugin/build/distributions'
          artifact: '$(build.buildNumber)'

      - task: PublishPipelineArtifact@1
        displayName: "Publish Artifact: $(build.buildNumber)-reports"
        condition: always()
        inputs:
          path: 'plugin/build/reports'
          artifact: '$(build.buildNumber).$(Agent.OS)-reports'

      - task: Gradle@2
        displayName: Stop Gradle Daemon # for correct cache extraction
        inputs:
          jdkVersionOption: 1.8
          options: --stop

  - job: test_build # check compilation for newest IDEA
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
      GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
    steps:
      - task: CmdLine@1
        displayName: Run printenv
        inputs:
          filename: printenv

      - task: Cache@2
        inputs:
          # Test build is allowed to reuse cache from the main one, but not the other way around.
          key: '"$(Agent.OS)" | "2019.3" | test_build | **/*.gradle | gradle.properties'
          restoreKeys: |
            "$(Agent.OS)" | "2019.3" | production_build | **/*.gradle | gradle.properties
            "$(Agent.OS)" | "2019.3" | test_build | **/*.gradle
            "$(Agent.OS)" | "2019.3" | production_build | **/*.gradle
            "$(Agent.OS)" | "2019.3" | test_build
            "$(Agent.OS)" | "2019.3"
          path: $(GRADLE_USER_HOME)/caches/modules-2
        displayName: Gradle build cache

      - task: Gradle@2
        displayName: Gradle compile
        inputs:
          jdkVersionOption: 1.8
          options: '--info -PideaVersion=2019.3'
          tasks: clean :plugin:compileJava

      - task: Gradle@2
        displayName: Stop Gradle Daemon # for correct cache extraction
        inputs:
          jdkVersionOption: 1.8
          options: --stop
